import React, { useState, useEffect } from 'react';
import { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';

function Login({ onLogin }) {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [msg, setMsg] = useState('');
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    const res = await fetch('http://localhost:5000/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include',
      body: JSON.stringify({ username, password })
    });
    const data = await res.json();
    if (data.success) {
      onLogin();
      navigate('/dashboard');
    } else {
      setMsg(data.message);
    }
  };

  return (
    <div>
      <h2>Login</h2>
      <p>{msg}</p>
      <form onSubmit={handleSubmit}>
        <input value={username} onChange={e => setUsername(e.target.value)} placeholder="Username" /><br />
        <input type="password" value={password} onChange={e => setPassword(e.target.value)} placeholder="Password" /><br />
        <button type="submit">Login</button>
      </form>
    </div>
  );
}

function Dashboard({ isLoggedIn }) {
  const [tasks, setTasks] = useState([]);
  const [newTask, setNewTask] = useState('');
  const navigate = useNavigate();

  const fetchTasks = async () => {
    const res = await fetch('http://localhost:5000/tasks', {
      credentials: 'include'
    });
    const data = await res.json();
    setTasks(data);
  };

  useEffect(() => {
    if (!isLoggedIn) {
      navigate('/');
    } else {
      fetchTasks();
    }
  }, [isLoggedIn]);

  const handleAdd = async () => {
    await fetch('http://localhost:5000/tasks', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include',
      body: JSON.stringify({ name: newTask })
    });
    setNewTask('');
    fetchTasks();
  };

  const handleDelete = async (id) => {
    await fetch(`http://localhost:5000/tasks/${id}`, {
      method: 'DELETE',
      credentials: 'include'
    });
    fetchTasks();
  };

  return (
    <div>
      <h2>Dashboard</h2>
      <input value={newTask} onChange={e => setNewTask(e.target.value)} placeholder="New Task" />
      <button onClick={handleAdd}>Add Task</button>
      <ul>
        {tasks.map(task => (
          <li key={task.id}>{task.name}
            <button onClick={() => handleDelete(task.id)}>‚ùå</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

function App() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Login onLogin={() => setIsLoggedIn(true)} />} />
        <Route path="/dashboard" element={<Dashboard isLoggedIn={isLoggedIn} />} />
        <Route path="*" element={<Navigate to="/" />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;

